@model UberDeployer.WebApp.Core.Models.Deployment.IndexViewModel

@{
  ViewBag.Title = "Deployment | ÜberDeployer";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@section OptionalStyles
{
  <link href="@Url.Content("~/Static/plugins/typeahead/typeahead.less")" rel="stylesheet" type="text/css" />
}

@section OptionalScripts {
  <script type="text/javascript" src="@Url.Content("~/Static/plugins/typeahead/bloodhound.js")"></script>
  <script type="text/javascript" src="@Url.Content("~/Static/plugins/typeahead/typeahead.jquery.js")"></script>

  <script type="text/javascript">
    $(document).ready(function() {

      var targetEnvironmentName = @Html.Raw(Model.InitialSelection != null ? string.Format("'{0}'", Model.InitialSelection.TargetEnvironmentName) : "null");
      var projectName = @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectName) ? string.Format("'{0}'", Model.InitialSelection.ProjectName) : "null");
      var projectConfigurationName = @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectConfigurationName) ? string.Format("'{0}'", Model.InitialSelection.ProjectConfigurationName) : "null");
      var projectConfigurationBuildId = @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectConfigurationBuildId) ? string.Format("'{0}'", Model.InitialSelection.ProjectConfigurationBuildId) : "null");

      var initData = {
        userCanDeploy: "true",
        initialSelection: {
          targetEnvironmentName: targetEnvironmentName,
          projectName: projectName,
          projectConfigurationName: projectConfigurationName,
          projectConfigurationBuildId: projectConfigurationBuildId
        }
      };

      initializeDeploymentPage(initData);

      $("#dlg-collect-dependencies-checkbox-all").change(function() {

        var self = this;

        var inputs = $('#dlg-collect-dependencies-grid').find("input[type=checkbox]");

        inputs.each(function() {
          this.checked = self.checked;
        });
      });

      var substringMatcher = function(source) {
        return function findMatches(q, cb) {
          var matches, substringRegex;

          // an array that will be populated with substring matches
          matches = [];

          // regex used to determine if a string contains the substring `q`
          substrRegex = new RegExp(q, 'i');

          // iterate through the pool of strings and for any string that
          // contains the substring `q`, add it to the `matches` array
          $.each(g_ProjectNames, function(i, str) {
            if (substrRegex.test(str)) {
              matches.push(str);
            }
          });

          cb(matches);
        };
      };

      $('#main-row .typeahead').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
      },
      {
        name: 'projects',
        source: substringMatcher(g_ProjectNames)
      });
    })
  </script>
}

<div id="content-title">
  <div class="row">
    <div class="col-md-12">
      <h1>Deployment</h1>
    </div>
  </div>
</div>

<div class="page-content inset">

  <div class="row">
    <div id="errorMsg" class="alert alert-error" style="display: none;">
    </div>
  </div>

  <div id="main-container">
    <div class="row" id="targets">
      <div class="col-md-6">
        <label for="lst-environments" class="lst-header">Target environment:</label>
        <select id="lst-environments" size="7"></select>
      </div>
      <div class="col-md-6">
        <label for="lst-machines" class="lst-header">Target machines:</label>
        <select id="lst-machines" size="7" multiple="multiple"></select>
      </div>
    </div>

    <div class="row" id="main-row">
      <div class="col-md-3">
        
        <div class="row">
          <label for="lst-projects" class="lst-header">Projects:</label>
          <div class="lst-filter">
            <input type="checkbox" id="chb-deployable-projects" @(Model.ShowOnlyDeployable ? "checked=\"checked\"" : "") />
            <label for="chb-deployable-projects">Only deployable</label>
          </div>
        </div>
        <div class="row">
          <input class="typeahead" type="text" placeholder="Project" />
        </div>
        <div class="row">
          <select id="lst-projects" size="10"></select>
        </div>
      </div>
      <div class="col-md-4">
        <label for="lst-project-configs" class="lst-header">Configurations:</label>
        <br />
        <select id="lst-project-configs" size="10"></select>
      </div>
      <div class="col-md-5">
        <label for="lst-project-config-builds" class="lst-header">Builds:</label>
        <br />
        <select id="lst-project-config-builds" size="10"></select>
      </div>
    </div>

    <div class="row row-with-top-margin row-with-bottom-margin">
      <div class="col-md-6">
        @if (Model.IsCreatePackageVisible)
        {
          <button type="button" id="btn-create-package" name="btn-create-package" class="flat-butt" data-toggle="package-dir-modal" data-target="#package-dir-modal">
            <i class="fa fa-gift"></i>Create Package
          </button>
        }
        <button type="button" id="btn-version" class="flat-butt" onclick="javascript: getProjectVersion();">
          <i class="fa fa-crosshairs"></i>Version?
        </button>
      </div>
      <div class="col-md-6">
        <div class="row">
          <div class="col-md-8">
            <button type="button" id="btn-deploy" name="btn-deploy" class="flat-butt flat-primary-butt flat-butt-full-width">
              <i class="fa fa-cloud-upload"></i>Deploy!
            </button>
          </div>
          <div class="col-md-4">
            <button type="button" id="btn-simulate" name="btn-simulate" class="flat-butt flat-info-butt flat-butt-full-width">
              <i class="fa fa-cloud"></i>Simulate
            </button>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div id="txt-logs">
        </div>
        <button id="btn-clear-logs" class="flat-butt flat-gray-butt pull-right" onclick="javascript: clearLogs();">
          <i class="fa fa-trash-o"></i>Clear
        </button>
      </div>
    </div>
    <div class="row row-with-top-margin">
      <div class="col-md-6">
        <div id="pro-fucking-tip">
          <p>
            <small>Life pro tip of the fucking day:</small>
          </p>
          <p>
            <q><em>@Model.TipOfTheDay</em></q>
          </p>
          <p>
            <small>Courtesy of <a href="http://fuckinghomepage.com/">Fucking Homepage</a>.</small>
          </p>
        </div>
      </div>
      <div class="col-md-6">
        <div id="dev-life-container">
          <p class="dev-life-description">
            "@Model.FunnyGifDescription"
          </p>
          <img src="@Model.FunnyGifUrl" />
        </div>
      </div>
    </div>
  </div>
</div>

@{ Html.RenderPartial("Popups/CollectCredentials");}

@{ Html.RenderPartial("Popups/CollectDatabaseScripts");}

@{ Html.RenderPartial("Popups/DeployArtifactsToLocation");}

@{ Html.RenderPartial("Popups/CollectDependencies");}
